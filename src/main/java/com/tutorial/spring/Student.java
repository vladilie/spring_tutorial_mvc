package com.tutorial.spring;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.Arrays;
import java.util.Properties;
import java.util.stream.Collectors;

public class Student {
    @NotNull
    @Size(min=1, message="#{one.is.needed}")
    private String firstName;
    @NotNull
    @Size(min=1, message="#{one.is.needed}")
    private String lastName;
    @NotNull
    @Size(min=1, message="#{one.is.needed}")
    private String country;
    @NotNull
    @Size(min=1, message="#{one.is.needed}")
    private String favouriteLanguage;
    @NotNull
    @Size(min=2, message="#{two.are.needed}")
    private String[] operatingSystemList;

    private Properties countries;
    private Properties languages;
    private Properties operatingSystems;

    public Student() {
        // nothing autogenerated
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getFavouriteLanguage() {
        return favouriteLanguage;
    }

    public void setFavouriteLanguage(String favouriteLanguage) {
        this.favouriteLanguage = favouriteLanguage;
    }

    public String[] getOperatingSystemList() {
        return operatingSystemList;
    }

    public void setOperatingSystemList(String[] operatingSystemList) {
        this.operatingSystemList = operatingSystemList;
    }

    public void setCountries(Properties countries) {
        this.countries = countries;
    }

    public void setLanguages(Properties languages) {
        this.languages = languages;
    }

    public void setOperatingSystems(Properties operatingSystems) {
        this.operatingSystems = operatingSystems;
    }

    public String getCountryName() {
        return countries.getProperty(getCountry());
    }

    public String getFavouriteLanguageName() {
        return languages.getProperty(getFavouriteLanguage());
    }

    public Properties getCountries(){
        return countries;
    }

    public Properties getLanguages() {
        return languages;
    }

    public Properties getOperatingSystems() {
        return operatingSystems;
    }

    public String[] getOperatingSystemNames() {
        return (String[]) Arrays.asList(getOperatingSystemList())
                .stream()
                .map(k -> getOperatingSystems().getProperty(k))
                .collect(Collectors.toList())
                .toArray();
    }

}
